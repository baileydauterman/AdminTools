(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{NazI:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return m})),n.d(t,"default",(function(){return p}));var o=n("Fcif"),a=n("+I+c"),r=(n("mXGw"),n("/FXl")),i=n("TjRS"),s=n("ZFoC"),c=(n("aD51"),["components"]),m={};void 0!==m&&m&&m===Object(m)&&Object.isExtensible(m)&&!m.hasOwnProperty("__filemeta")&&Object.defineProperty(m,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"pages/home.mdx"}});var l={_frontmatter:m},b=i.a;function p(e){var t,n=e.components,p=Object(a.a)(e,c);return Object(r.b)(b,Object(o.a)({},l,p,{components:n,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"admintools"},"AdminTools"),Object(r.b)("p",null,"Hey, thanks for stopping by, this is my collection of System Administration PowerShell scripts to make my life easier.\nThe project can be found on ",Object(r.b)("a",{parentName:"p",href:"https://github.com/baileydauterman/AdminTools"},"GitHub"),".\nI am a newbie at creating PowerShell Modules, so my current suggestion for running this to get the commands to be available at startup:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-js"},"Add-Content -Path $profile -Value 'Import-Module \".\\AdminTools.psm1\"'\n")),Object(r.b)(s.c,{__position:0,__code:"",__scope:(t={props:p,DefaultLayout:i.a,Playground:s.c},t.DefaultLayout=i.a,t._frontmatter=m,t),mdxType:"Playground"}))}void 0!==p&&p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"pages/home.mdx"}}),p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---pages-home-mdx-4f5a6bb45ea1877a24f5.js.map