(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{"7OsV":function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return m})),n.d(t,"default",(function(){return s}));var o=n("Fcif"),a=n("+I+c"),i=(n("mXGw"),n("/FXl")),r=n("TjRS"),l=(n("aD51"),["components"]),m={};void 0!==m&&m&&m===Object(m)&&Object.isExtensible(m)&&!m.hasOwnProperty("__filemeta")&&Object.defineProperty(m,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"README.md"}});var c={_frontmatter:m},d=r.a;function s(e){var t=e.components,n=Object(a.a)(e,l);return Object(i.b)(d,Object(o.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"admintools"},"AdminTools"),Object(i.b)("p",null,"A collection of PowerShell Modules that I have created during my time as a System Administrator."),Object(i.b)("p",null,"After cloning these repo, run ",Object(i.b)("inlineCode",{parentName:"p"},"Import-Module AdminTools.psm1")," to load the functions into memory.\nAlternatively you can load these on startup by adding:\n",Object(i.b)("inlineCode",{parentName:"p"},"Add-Content -Path $profile -Value 'Import-Module \"\\path\\to\\folder\\AdminTools.psm1\"'")))}void 0!==s&&s&&s===Object(s)&&Object.isExtensible(s)&&!s.hasOwnProperty("__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"README.md"}}),s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---readme-md-2610b9184f75102f94cc.js.map